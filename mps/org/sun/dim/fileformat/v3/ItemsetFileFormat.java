// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemsetFileFormat.proto

package org.sun.dim.fileformat.v3;

public final class ItemsetFileFormat {
  private ItemsetFileFormat() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VertexFMTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
  }
  public static final class VertexFMT extends
      com.google.protobuf.GeneratedMessage
      implements VertexFMTOrBuilder {
    // Use VertexFMT.newBuilder() to construct.
    private VertexFMT(Builder builder) {
      super(builder);
    }
    private VertexFMT(boolean noInit) {}
    
    private static final VertexFMT defaultInstance;
    public static VertexFMT getDefaultInstance() {
      return defaultInstance;
    }
    
    public VertexFMT getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_VertexFMT_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_VertexFMT_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_VertexFMT_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_VertexFMT_fieldAccessorTable;
      }
      
      // Construct using org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.getDescriptor();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT getDefaultInstanceForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.getDefaultInstance();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT build() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT buildPartial() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT result = new org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT) {
          return mergeFrom((org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT other) {
        if (other == org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.sun.dim.fileformat.v3.VertexFMT)
    }
    
    static {
      defaultInstance = new VertexFMT(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.sun.dim.fileformat.v3.VertexFMT)
  }
  
  public interface EdgeFMTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 source = 2;
    boolean hasSource();
    int getSource();
    
    // required int32 target = 3;
    boolean hasTarget();
    int getTarget();
    
    // required int32 attribute = 4;
    boolean hasAttribute();
    int getAttribute();
  }
  public static final class EdgeFMT extends
      com.google.protobuf.GeneratedMessage
      implements EdgeFMTOrBuilder {
    // Use EdgeFMT.newBuilder() to construct.
    private EdgeFMT(Builder builder) {
      super(builder);
    }
    private EdgeFMT(boolean noInit) {}
    
    private static final EdgeFMT defaultInstance;
    public static EdgeFMT getDefaultInstance() {
      return defaultInstance;
    }
    
    public EdgeFMT getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_EdgeFMT_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_EdgeFMT_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 source = 2;
    public static final int SOURCE_FIELD_NUMBER = 2;
    private int source_;
    public boolean hasSource() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSource() {
      return source_;
    }
    
    // required int32 target = 3;
    public static final int TARGET_FIELD_NUMBER = 3;
    private int target_;
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTarget() {
      return target_;
    }
    
    // required int32 attribute = 4;
    public static final int ATTRIBUTE_FIELD_NUMBER = 4;
    private int attribute_;
    public boolean hasAttribute() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAttribute() {
      return attribute_;
    }
    
    private void initFields() {
      source_ = 0;
      target_ = 0;
      attribute_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTarget()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttribute()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, source_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, target_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, attribute_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, source_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, target_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, attribute_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_EdgeFMT_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_EdgeFMT_fieldAccessorTable;
      }
      
      // Construct using org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        source_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        target_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        attribute_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.getDescriptor();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT getDefaultInstanceForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.getDefaultInstance();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT build() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT buildPartial() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT result = new org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.attribute_ = attribute_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT) {
          return mergeFrom((org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT other) {
        if (other == org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.getDefaultInstance()) return this;
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasAttribute()) {
          setAttribute(other.getAttribute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSource()) {
          
          return false;
        }
        if (!hasTarget()) {
          
          return false;
        }
        if (!hasAttribute()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              source_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              target_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              attribute_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 source = 2;
      private int source_ ;
      public boolean hasSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSource() {
        return source_;
      }
      public Builder setSource(int value) {
        bitField0_ |= 0x00000001;
        source_ = value;
        onChanged();
        return this;
      }
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        source_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 target = 3;
      private int target_ ;
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTarget() {
        return target_;
      }
      public Builder setTarget(int value) {
        bitField0_ |= 0x00000002;
        target_ = value;
        onChanged();
        return this;
      }
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        target_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 attribute = 4;
      private int attribute_ ;
      public boolean hasAttribute() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAttribute() {
        return attribute_;
      }
      public Builder setAttribute(int value) {
        bitField0_ |= 0x00000004;
        attribute_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttribute() {
        bitField0_ = (bitField0_ & ~0x00000004);
        attribute_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.sun.dim.fileformat.v3.EdgeFMT)
    }
    
    static {
      defaultInstance = new EdgeFMT(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.sun.dim.fileformat.v3.EdgeFMT)
  }
  
  public interface TransactionFMTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 execution_id = 1;
    boolean hasExecutionId();
    int getExecutionId();
    
    // required bool label = 2;
    boolean hasLabel();
    boolean getLabel();
    
    // repeated int32 items = 3;
    java.util.List<java.lang.Integer> getItemsList();
    int getItemsCount();
    int getItems(int index);
  }
  public static final class TransactionFMT extends
      com.google.protobuf.GeneratedMessage
      implements TransactionFMTOrBuilder {
    // Use TransactionFMT.newBuilder() to construct.
    private TransactionFMT(Builder builder) {
      super(builder);
    }
    private TransactionFMT(boolean noInit) {}
    
    private static final TransactionFMT defaultInstance;
    public static TransactionFMT getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransactionFMT getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionFMT_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionFMT_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 execution_id = 1;
    public static final int EXECUTION_ID_FIELD_NUMBER = 1;
    private int executionId_;
    public boolean hasExecutionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getExecutionId() {
      return executionId_;
    }
    
    // required bool label = 2;
    public static final int LABEL_FIELD_NUMBER = 2;
    private boolean label_;
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getLabel() {
      return label_;
    }
    
    // repeated int32 items = 3;
    public static final int ITEMS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> items_;
    public java.util.List<java.lang.Integer>
        getItemsList() {
      return items_;
    }
    public int getItemsCount() {
      return items_.size();
    }
    public int getItems(int index) {
      return items_.get(index);
    }
    
    private void initFields() {
      executionId_ = 0;
      label_ = false;
      items_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasExecutionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLabel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, executionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, label_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeInt32(3, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, executionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, label_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < items_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(items_.get(i));
        }
        size += dataSize;
        size += 1 * getItemsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionFMT_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionFMT_fieldAccessorTable;
      }
      
      // Construct using org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        executionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        label_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        items_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDescriptor();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getDefaultInstanceForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT build() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT buildPartial() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT result = new org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executionId_ = executionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.label_ = label_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          items_ = java.util.Collections.unmodifiableList(items_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.items_ = items_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT) {
          return mergeFrom((org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT other) {
        if (other == org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance()) return this;
        if (other.hasExecutionId()) {
          setExecutionId(other.getExecutionId());
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasExecutionId()) {
          
          return false;
        }
        if (!hasLabel()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              executionId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              label_ = input.readBool();
              break;
            }
            case 24: {
              ensureItemsIsMutable();
              items_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addItems(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 execution_id = 1;
      private int executionId_ ;
      public boolean hasExecutionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getExecutionId() {
        return executionId_;
      }
      public Builder setExecutionId(int value) {
        bitField0_ |= 0x00000001;
        executionId_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecutionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executionId_ = 0;
        onChanged();
        return this;
      }
      
      // required bool label = 2;
      private boolean label_ ;
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getLabel() {
        return label_;
      }
      public Builder setLabel(boolean value) {
        bitField0_ |= 0x00000002;
        label_ = value;
        onChanged();
        return this;
      }
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        label_ = false;
        onChanged();
        return this;
      }
      
      // repeated int32 items = 3;
      private java.util.List<java.lang.Integer> items_ = java.util.Collections.emptyList();;
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          items_ = new java.util.ArrayList<java.lang.Integer>(items_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getItemsList() {
        return java.util.Collections.unmodifiableList(items_);
      }
      public int getItemsCount() {
        return items_.size();
      }
      public int getItems(int index) {
        return items_.get(index);
      }
      public Builder setItems(
          int index, int value) {
        ensureItemsIsMutable();
        items_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addItems(int value) {
        ensureItemsIsMutable();
        items_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemsIsMutable();
        super.addAll(values, items_);
        onChanged();
        return this;
      }
      public Builder clearItems() {
        items_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.sun.dim.fileformat.v3.TransactionFMT)
    }
    
    static {
      defaultInstance = new TransactionFMT(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.sun.dim.fileformat.v3.TransactionFMT)
  }
  
  public interface TransactionListFMTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.sun.dim.fileformat.v3.TransactionFMT transactions = 1;
    java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> 
        getTransactionsList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getTransactions(int index);
    int getTransactionsCount();
    java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
        getTransactionsOrBuilderList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getTransactionsOrBuilder(
        int index);
  }
  public static final class TransactionListFMT extends
      com.google.protobuf.GeneratedMessage
      implements TransactionListFMTOrBuilder {
    // Use TransactionListFMT.newBuilder() to construct.
    private TransactionListFMT(Builder builder) {
      super(builder);
    }
    private TransactionListFMT(boolean noInit) {}
    
    private static final TransactionListFMT defaultInstance;
    public static TransactionListFMT getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransactionListFMT getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_fieldAccessorTable;
    }
    
    // repeated .org.sun.dim.fileformat.v3.TransactionFMT transactions = 1;
    public static final int TRANSACTIONS_FIELD_NUMBER = 1;
    private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> transactions_;
    public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> getTransactionsList() {
      return transactions_;
    }
    public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
        getTransactionsOrBuilderList() {
      return transactions_;
    }
    public int getTransactionsCount() {
      return transactions_.size();
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getTransactions(int index) {
      return transactions_.get(index);
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getTransactionsOrBuilder(
        int index) {
      return transactions_.get(index);
    }
    
    private void initFields() {
      transactions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getTransactionsCount(); i++) {
        if (!getTransactions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < transactions_.size(); i++) {
        output.writeMessage(1, transactions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < transactions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, transactions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_fieldAccessorTable;
      }
      
      // Construct using org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTransactionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (transactionsBuilder_ == null) {
          transactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          transactionsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.getDescriptor();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT getDefaultInstanceForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.getDefaultInstance();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT build() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT buildPartial() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT result = new org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT(this);
        int from_bitField0_ = bitField0_;
        if (transactionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            transactions_ = java.util.Collections.unmodifiableList(transactions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.transactions_ = transactions_;
        } else {
          result.transactions_ = transactionsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT) {
          return mergeFrom((org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT other) {
        if (other == org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.getDefaultInstance()) return this;
        if (transactionsBuilder_ == null) {
          if (!other.transactions_.isEmpty()) {
            if (transactions_.isEmpty()) {
              transactions_ = other.transactions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTransactionsIsMutable();
              transactions_.addAll(other.transactions_);
            }
            onChanged();
          }
        } else {
          if (!other.transactions_.isEmpty()) {
            if (transactionsBuilder_.isEmpty()) {
              transactionsBuilder_.dispose();
              transactionsBuilder_ = null;
              transactions_ = other.transactions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              transactionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTransactionsFieldBuilder() : null;
            } else {
              transactionsBuilder_.addAllMessages(other.transactions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getTransactionsCount(); i++) {
          if (!getTransactions(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder subBuilder = org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransactions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.sun.dim.fileformat.v3.TransactionFMT transactions = 1;
      private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> transactions_ =
        java.util.Collections.emptyList();
      private void ensureTransactionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          transactions_ = new java.util.ArrayList<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT>(transactions_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> transactionsBuilder_;
      
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> getTransactionsList() {
        if (transactionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transactions_);
        } else {
          return transactionsBuilder_.getMessageList();
        }
      }
      public int getTransactionsCount() {
        if (transactionsBuilder_ == null) {
          return transactions_.size();
        } else {
          return transactionsBuilder_.getCount();
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getTransactions(int index) {
        if (transactionsBuilder_ == null) {
          return transactions_.get(index);
        } else {
          return transactionsBuilder_.getMessage(index);
        }
      }
      public Builder setTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.set(index, value);
          onChanged();
        } else {
          transactionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.set(index, builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTransactions(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.add(value);
          onChanged();
        } else {
          transactionsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.add(index, value);
          onChanged();
        } else {
          transactionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTransactions(
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.add(builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.add(index, builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTransactions(
          java.lang.Iterable<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> values) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          super.addAll(values, transactions_);
          onChanged();
        } else {
          transactionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTransactions() {
        if (transactionsBuilder_ == null) {
          transactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          transactionsBuilder_.clear();
        }
        return this;
      }
      public Builder removeTransactions(int index) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.remove(index);
          onChanged();
        } else {
          transactionsBuilder_.remove(index);
        }
        return this;
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder getTransactionsBuilder(
          int index) {
        return getTransactionsFieldBuilder().getBuilder(index);
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getTransactionsOrBuilder(
          int index) {
        if (transactionsBuilder_ == null) {
          return transactions_.get(index);  } else {
          return transactionsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
           getTransactionsOrBuilderList() {
        if (transactionsBuilder_ != null) {
          return transactionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transactions_);
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder addTransactionsBuilder() {
        return getTransactionsFieldBuilder().addBuilder(
            org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance());
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder addTransactionsBuilder(
          int index) {
        return getTransactionsFieldBuilder().addBuilder(
            index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance());
      }
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder> 
           getTransactionsBuilderList() {
        return getTransactionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
          getTransactionsFieldBuilder() {
        if (transactionsBuilder_ == null) {
          transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder>(
                  transactions_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          transactions_ = null;
        }
        return transactionsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.sun.dim.fileformat.v3.TransactionListFMT)
    }
    
    static {
      defaultInstance = new TransactionListFMT(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.sun.dim.fileformat.v3.TransactionListFMT)
  }
  
  public interface TransactionDBFMTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.sun.dim.fileformat.v3.EdgeFMT edges = 1;
    java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> 
        getEdgesList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT getEdges(int index);
    int getEdgesCount();
    java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder> 
        getEdgesOrBuilderList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder getEdgesOrBuilder(
        int index);
    
    // repeated .org.sun.dim.fileformat.v3.VertexFMT vertices = 5;
    java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> 
        getVerticesList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT getVertices(int index);
    int getVerticesCount();
    java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder> 
        getVerticesOrBuilderList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder getVerticesOrBuilder(
        int index);
    
    // repeated .org.sun.dim.fileformat.v3.TransactionFMT vertex_transactions = 6;
    java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> 
        getVertexTransactionsList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getVertexTransactions(int index);
    int getVertexTransactionsCount();
    java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
        getVertexTransactionsOrBuilderList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getVertexTransactionsOrBuilder(
        int index);
    
    // required int32 positive_support = 3;
    boolean hasPositiveSupport();
    int getPositiveSupport();
    
    // required int32 negative_support = 4;
    boolean hasNegativeSupport();
    int getNegativeSupport();
    
    // repeated .org.sun.dim.fileformat.v3.TransactionListFMT lists = 2;
    java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> 
        getListsList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT getLists(int index);
    int getListsCount();
    java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder> 
        getListsOrBuilderList();
    org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder getListsOrBuilder(
        int index);
  }
  public static final class TransactionDBFMT extends
      com.google.protobuf.GeneratedMessage
      implements TransactionDBFMTOrBuilder {
    // Use TransactionDBFMT.newBuilder() to construct.
    private TransactionDBFMT(Builder builder) {
      super(builder);
    }
    private TransactionDBFMT(boolean noInit) {}
    
    private static final TransactionDBFMT defaultInstance;
    public static TransactionDBFMT getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransactionDBFMT getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated .org.sun.dim.fileformat.v3.EdgeFMT edges = 1;
    public static final int EDGES_FIELD_NUMBER = 1;
    private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> edges_;
    public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> getEdgesList() {
      return edges_;
    }
    public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder> 
        getEdgesOrBuilderList() {
      return edges_;
    }
    public int getEdgesCount() {
      return edges_.size();
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT getEdges(int index) {
      return edges_.get(index);
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder getEdgesOrBuilder(
        int index) {
      return edges_.get(index);
    }
    
    // repeated .org.sun.dim.fileformat.v3.VertexFMT vertices = 5;
    public static final int VERTICES_FIELD_NUMBER = 5;
    private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> vertices_;
    public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> getVerticesList() {
      return vertices_;
    }
    public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder> 
        getVerticesOrBuilderList() {
      return vertices_;
    }
    public int getVerticesCount() {
      return vertices_.size();
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT getVertices(int index) {
      return vertices_.get(index);
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder getVerticesOrBuilder(
        int index) {
      return vertices_.get(index);
    }
    
    // repeated .org.sun.dim.fileformat.v3.TransactionFMT vertex_transactions = 6;
    public static final int VERTEX_TRANSACTIONS_FIELD_NUMBER = 6;
    private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> vertexTransactions_;
    public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> getVertexTransactionsList() {
      return vertexTransactions_;
    }
    public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
        getVertexTransactionsOrBuilderList() {
      return vertexTransactions_;
    }
    public int getVertexTransactionsCount() {
      return vertexTransactions_.size();
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getVertexTransactions(int index) {
      return vertexTransactions_.get(index);
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getVertexTransactionsOrBuilder(
        int index) {
      return vertexTransactions_.get(index);
    }
    
    // required int32 positive_support = 3;
    public static final int POSITIVE_SUPPORT_FIELD_NUMBER = 3;
    private int positiveSupport_;
    public boolean hasPositiveSupport() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPositiveSupport() {
      return positiveSupport_;
    }
    
    // required int32 negative_support = 4;
    public static final int NEGATIVE_SUPPORT_FIELD_NUMBER = 4;
    private int negativeSupport_;
    public boolean hasNegativeSupport() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNegativeSupport() {
      return negativeSupport_;
    }
    
    // repeated .org.sun.dim.fileformat.v3.TransactionListFMT lists = 2;
    public static final int LISTS_FIELD_NUMBER = 2;
    private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> lists_;
    public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> getListsList() {
      return lists_;
    }
    public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder> 
        getListsOrBuilderList() {
      return lists_;
    }
    public int getListsCount() {
      return lists_.size();
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT getLists(int index) {
      return lists_.get(index);
    }
    public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder getListsOrBuilder(
        int index) {
      return lists_.get(index);
    }
    
    private void initFields() {
      edges_ = java.util.Collections.emptyList();
      vertices_ = java.util.Collections.emptyList();
      vertexTransactions_ = java.util.Collections.emptyList();
      positiveSupport_ = 0;
      negativeSupport_ = 0;
      lists_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPositiveSupport()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNegativeSupport()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEdgesCount(); i++) {
        if (!getEdges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVerticesCount(); i++) {
        if (!getVertices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVertexTransactionsCount(); i++) {
        if (!getVertexTransactions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getListsCount(); i++) {
        if (!getLists(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < edges_.size(); i++) {
        output.writeMessage(1, edges_.get(i));
      }
      for (int i = 0; i < lists_.size(); i++) {
        output.writeMessage(2, lists_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, positiveSupport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, negativeSupport_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        output.writeMessage(5, vertices_.get(i));
      }
      for (int i = 0; i < vertexTransactions_.size(); i++) {
        output.writeMessage(6, vertexTransactions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < edges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, edges_.get(i));
      }
      for (int i = 0; i < lists_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, lists_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, positiveSupport_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, negativeSupport_);
      }
      for (int i = 0; i < vertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, vertices_.get(i));
      }
      for (int i = 0; i < vertexTransactions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, vertexTransactions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    @java.lang.Override
    protected Object writeReplace() throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_fieldAccessorTable;
      }
      
      // Construct using org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEdgesFieldBuilder();
          getVerticesFieldBuilder();
          getVertexTransactionsFieldBuilder();
          getListsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (edgesBuilder_ == null) {
          edges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          edgesBuilder_.clear();
        }
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          verticesBuilder_.clear();
        }
        if (vertexTransactionsBuilder_ == null) {
          vertexTransactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          vertexTransactionsBuilder_.clear();
        }
        positiveSupport_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        negativeSupport_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (listsBuilder_ == null) {
          lists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          listsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.getDescriptor();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT getDefaultInstanceForType() {
        return org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.getDefaultInstance();
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT build() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT buildPartial() {
        org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT result = new org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (edgesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            edges_ = java.util.Collections.unmodifiableList(edges_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.edges_ = edges_;
        } else {
          result.edges_ = edgesBuilder_.build();
        }
        if (verticesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            vertices_ = java.util.Collections.unmodifiableList(vertices_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.vertices_ = vertices_;
        } else {
          result.vertices_ = verticesBuilder_.build();
        }
        if (vertexTransactionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            vertexTransactions_ = java.util.Collections.unmodifiableList(vertexTransactions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.vertexTransactions_ = vertexTransactions_;
        } else {
          result.vertexTransactions_ = vertexTransactionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.positiveSupport_ = positiveSupport_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.negativeSupport_ = negativeSupport_;
        if (listsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            lists_ = java.util.Collections.unmodifiableList(lists_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.lists_ = lists_;
        } else {
          result.lists_ = listsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT) {
          return mergeFrom((org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT other) {
        if (other == org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.getDefaultInstance()) return this;
        if (edgesBuilder_ == null) {
          if (!other.edges_.isEmpty()) {
            if (edges_.isEmpty()) {
              edges_ = other.edges_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEdgesIsMutable();
              edges_.addAll(other.edges_);
            }
            onChanged();
          }
        } else {
          if (!other.edges_.isEmpty()) {
            if (edgesBuilder_.isEmpty()) {
              edgesBuilder_.dispose();
              edgesBuilder_ = null;
              edges_ = other.edges_;
              bitField0_ = (bitField0_ & ~0x00000001);
              edgesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEdgesFieldBuilder() : null;
            } else {
              edgesBuilder_.addAllMessages(other.edges_);
            }
          }
        }
        if (verticesBuilder_ == null) {
          if (!other.vertices_.isEmpty()) {
            if (vertices_.isEmpty()) {
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureVerticesIsMutable();
              vertices_.addAll(other.vertices_);
            }
            onChanged();
          }
        } else {
          if (!other.vertices_.isEmpty()) {
            if (verticesBuilder_.isEmpty()) {
              verticesBuilder_.dispose();
              verticesBuilder_ = null;
              vertices_ = other.vertices_;
              bitField0_ = (bitField0_ & ~0x00000002);
              verticesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVerticesFieldBuilder() : null;
            } else {
              verticesBuilder_.addAllMessages(other.vertices_);
            }
          }
        }
        if (vertexTransactionsBuilder_ == null) {
          if (!other.vertexTransactions_.isEmpty()) {
            if (vertexTransactions_.isEmpty()) {
              vertexTransactions_ = other.vertexTransactions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureVertexTransactionsIsMutable();
              vertexTransactions_.addAll(other.vertexTransactions_);
            }
            onChanged();
          }
        } else {
          if (!other.vertexTransactions_.isEmpty()) {
            if (vertexTransactionsBuilder_.isEmpty()) {
              vertexTransactionsBuilder_.dispose();
              vertexTransactionsBuilder_ = null;
              vertexTransactions_ = other.vertexTransactions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              vertexTransactionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVertexTransactionsFieldBuilder() : null;
            } else {
              vertexTransactionsBuilder_.addAllMessages(other.vertexTransactions_);
            }
          }
        }
        if (other.hasPositiveSupport()) {
          setPositiveSupport(other.getPositiveSupport());
        }
        if (other.hasNegativeSupport()) {
          setNegativeSupport(other.getNegativeSupport());
        }
        if (listsBuilder_ == null) {
          if (!other.lists_.isEmpty()) {
            if (lists_.isEmpty()) {
              lists_ = other.lists_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureListsIsMutable();
              lists_.addAll(other.lists_);
            }
            onChanged();
          }
        } else {
          if (!other.lists_.isEmpty()) {
            if (listsBuilder_.isEmpty()) {
              listsBuilder_.dispose();
              listsBuilder_ = null;
              lists_ = other.lists_;
              bitField0_ = (bitField0_ & ~0x00000020);
              listsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getListsFieldBuilder() : null;
            } else {
              listsBuilder_.addAllMessages(other.lists_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPositiveSupport()) {
          
          return false;
        }
        if (!hasNegativeSupport()) {
          
          return false;
        }
        for (int i = 0; i < getEdgesCount(); i++) {
          if (!getEdges(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVerticesCount(); i++) {
          if (!getVertices(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVertexTransactionsCount(); i++) {
          if (!getVertexTransactions(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getListsCount(); i++) {
          if (!getLists(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder subBuilder = org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEdges(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder subBuilder = org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLists(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              positiveSupport_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              negativeSupport_ = input.readInt32();
              break;
            }
            case 42: {
              org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder subBuilder = org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVertices(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder subBuilder = org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVertexTransactions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.sun.dim.fileformat.v3.EdgeFMT edges = 1;
      private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> edges_ =
        java.util.Collections.emptyList();
      private void ensureEdgesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          edges_ = new java.util.ArrayList<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT>(edges_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder> edgesBuilder_;
      
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> getEdgesList() {
        if (edgesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edges_);
        } else {
          return edgesBuilder_.getMessageList();
        }
      }
      public int getEdgesCount() {
        if (edgesBuilder_ == null) {
          return edges_.size();
        } else {
          return edgesBuilder_.getCount();
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT getEdges(int index) {
        if (edgesBuilder_ == null) {
          return edges_.get(index);
        } else {
          return edgesBuilder_.getMessage(index);
        }
      }
      public Builder setEdges(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT value) {
        if (edgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgesIsMutable();
          edges_.set(index, value);
          onChanged();
        } else {
          edgesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEdges(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder builderForValue) {
        if (edgesBuilder_ == null) {
          ensureEdgesIsMutable();
          edges_.set(index, builderForValue.build());
          onChanged();
        } else {
          edgesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEdges(org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT value) {
        if (edgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgesIsMutable();
          edges_.add(value);
          onChanged();
        } else {
          edgesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEdges(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT value) {
        if (edgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgesIsMutable();
          edges_.add(index, value);
          onChanged();
        } else {
          edgesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEdges(
          org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder builderForValue) {
        if (edgesBuilder_ == null) {
          ensureEdgesIsMutable();
          edges_.add(builderForValue.build());
          onChanged();
        } else {
          edgesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEdges(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder builderForValue) {
        if (edgesBuilder_ == null) {
          ensureEdgesIsMutable();
          edges_.add(index, builderForValue.build());
          onChanged();
        } else {
          edgesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEdges(
          java.lang.Iterable<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT> values) {
        if (edgesBuilder_ == null) {
          ensureEdgesIsMutable();
          super.addAll(values, edges_);
          onChanged();
        } else {
          edgesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEdges() {
        if (edgesBuilder_ == null) {
          edges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          edgesBuilder_.clear();
        }
        return this;
      }
      public Builder removeEdges(int index) {
        if (edgesBuilder_ == null) {
          ensureEdgesIsMutable();
          edges_.remove(index);
          onChanged();
        } else {
          edgesBuilder_.remove(index);
        }
        return this;
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder getEdgesBuilder(
          int index) {
        return getEdgesFieldBuilder().getBuilder(index);
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder getEdgesOrBuilder(
          int index) {
        if (edgesBuilder_ == null) {
          return edges_.get(index);  } else {
          return edgesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder> 
           getEdgesOrBuilderList() {
        if (edgesBuilder_ != null) {
          return edgesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edges_);
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder addEdgesBuilder() {
        return getEdgesFieldBuilder().addBuilder(
            org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.getDefaultInstance());
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder addEdgesBuilder(
          int index) {
        return getEdgesFieldBuilder().addBuilder(
            index, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.getDefaultInstance());
      }
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder> 
           getEdgesBuilderList() {
        return getEdgesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder> 
          getEdgesFieldBuilder() {
        if (edgesBuilder_ == null) {
          edgesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMTOrBuilder>(
                  edges_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          edges_ = null;
        }
        return edgesBuilder_;
      }
      
      // repeated .org.sun.dim.fileformat.v3.VertexFMT vertices = 5;
      private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> vertices_ =
        java.util.Collections.emptyList();
      private void ensureVerticesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          vertices_ = new java.util.ArrayList<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT>(vertices_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder> verticesBuilder_;
      
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> getVerticesList() {
        if (verticesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertices_);
        } else {
          return verticesBuilder_.getMessageList();
        }
      }
      public int getVerticesCount() {
        if (verticesBuilder_ == null) {
          return vertices_.size();
        } else {
          return verticesBuilder_.getCount();
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT getVertices(int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);
        } else {
          return verticesBuilder_.getMessage(index);
        }
      }
      public Builder setVertices(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.set(index, value);
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVertices(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.set(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVertices(org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVertices(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT value) {
        if (verticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVerticesIsMutable();
          vertices_.add(index, value);
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVertices(
          org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVertices(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder builderForValue) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.add(index, builderForValue.build());
          onChanged();
        } else {
          verticesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVertices(
          java.lang.Iterable<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT> values) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          super.addAll(values, vertices_);
          onChanged();
        } else {
          verticesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVertices() {
        if (verticesBuilder_ == null) {
          vertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          verticesBuilder_.clear();
        }
        return this;
      }
      public Builder removeVertices(int index) {
        if (verticesBuilder_ == null) {
          ensureVerticesIsMutable();
          vertices_.remove(index);
          onChanged();
        } else {
          verticesBuilder_.remove(index);
        }
        return this;
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder getVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().getBuilder(index);
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder getVerticesOrBuilder(
          int index) {
        if (verticesBuilder_ == null) {
          return vertices_.get(index);  } else {
          return verticesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder> 
           getVerticesOrBuilderList() {
        if (verticesBuilder_ != null) {
          return verticesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertices_);
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder addVerticesBuilder() {
        return getVerticesFieldBuilder().addBuilder(
            org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.getDefaultInstance());
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder addVerticesBuilder(
          int index) {
        return getVerticesFieldBuilder().addBuilder(
            index, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.getDefaultInstance());
      }
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder> 
           getVerticesBuilderList() {
        return getVerticesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder> 
          getVerticesFieldBuilder() {
        if (verticesBuilder_ == null) {
          verticesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMTOrBuilder>(
                  vertices_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          vertices_ = null;
        }
        return verticesBuilder_;
      }
      
      // repeated .org.sun.dim.fileformat.v3.TransactionFMT vertex_transactions = 6;
      private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> vertexTransactions_ =
        java.util.Collections.emptyList();
      private void ensureVertexTransactionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          vertexTransactions_ = new java.util.ArrayList<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT>(vertexTransactions_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> vertexTransactionsBuilder_;
      
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> getVertexTransactionsList() {
        if (vertexTransactionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vertexTransactions_);
        } else {
          return vertexTransactionsBuilder_.getMessageList();
        }
      }
      public int getVertexTransactionsCount() {
        if (vertexTransactionsBuilder_ == null) {
          return vertexTransactions_.size();
        } else {
          return vertexTransactionsBuilder_.getCount();
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT getVertexTransactions(int index) {
        if (vertexTransactionsBuilder_ == null) {
          return vertexTransactions_.get(index);
        } else {
          return vertexTransactionsBuilder_.getMessage(index);
        }
      }
      public Builder setVertexTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (vertexTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.set(index, value);
          onChanged();
        } else {
          vertexTransactionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVertexTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (vertexTransactionsBuilder_ == null) {
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.set(index, builderForValue.build());
          onChanged();
        } else {
          vertexTransactionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVertexTransactions(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (vertexTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.add(value);
          onChanged();
        } else {
          vertexTransactionsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVertexTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT value) {
        if (vertexTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.add(index, value);
          onChanged();
        } else {
          vertexTransactionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVertexTransactions(
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (vertexTransactionsBuilder_ == null) {
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.add(builderForValue.build());
          onChanged();
        } else {
          vertexTransactionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVertexTransactions(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder builderForValue) {
        if (vertexTransactionsBuilder_ == null) {
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.add(index, builderForValue.build());
          onChanged();
        } else {
          vertexTransactionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVertexTransactions(
          java.lang.Iterable<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT> values) {
        if (vertexTransactionsBuilder_ == null) {
          ensureVertexTransactionsIsMutable();
          super.addAll(values, vertexTransactions_);
          onChanged();
        } else {
          vertexTransactionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVertexTransactions() {
        if (vertexTransactionsBuilder_ == null) {
          vertexTransactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          vertexTransactionsBuilder_.clear();
        }
        return this;
      }
      public Builder removeVertexTransactions(int index) {
        if (vertexTransactionsBuilder_ == null) {
          ensureVertexTransactionsIsMutable();
          vertexTransactions_.remove(index);
          onChanged();
        } else {
          vertexTransactionsBuilder_.remove(index);
        }
        return this;
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder getVertexTransactionsBuilder(
          int index) {
        return getVertexTransactionsFieldBuilder().getBuilder(index);
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder getVertexTransactionsOrBuilder(
          int index) {
        if (vertexTransactionsBuilder_ == null) {
          return vertexTransactions_.get(index);  } else {
          return vertexTransactionsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
           getVertexTransactionsOrBuilderList() {
        if (vertexTransactionsBuilder_ != null) {
          return vertexTransactionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vertexTransactions_);
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder addVertexTransactionsBuilder() {
        return getVertexTransactionsFieldBuilder().addBuilder(
            org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance());
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder addVertexTransactionsBuilder(
          int index) {
        return getVertexTransactionsFieldBuilder().addBuilder(
            index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.getDefaultInstance());
      }
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder> 
           getVertexTransactionsBuilderList() {
        return getVertexTransactionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder> 
          getVertexTransactionsFieldBuilder() {
        if (vertexTransactionsBuilder_ == null) {
          vertexTransactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMTOrBuilder>(
                  vertexTransactions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          vertexTransactions_ = null;
        }
        return vertexTransactionsBuilder_;
      }
      
      // required int32 positive_support = 3;
      private int positiveSupport_ ;
      public boolean hasPositiveSupport() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getPositiveSupport() {
        return positiveSupport_;
      }
      public Builder setPositiveSupport(int value) {
        bitField0_ |= 0x00000008;
        positiveSupport_ = value;
        onChanged();
        return this;
      }
      public Builder clearPositiveSupport() {
        bitField0_ = (bitField0_ & ~0x00000008);
        positiveSupport_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 negative_support = 4;
      private int negativeSupport_ ;
      public boolean hasNegativeSupport() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNegativeSupport() {
        return negativeSupport_;
      }
      public Builder setNegativeSupport(int value) {
        bitField0_ |= 0x00000010;
        negativeSupport_ = value;
        onChanged();
        return this;
      }
      public Builder clearNegativeSupport() {
        bitField0_ = (bitField0_ & ~0x00000010);
        negativeSupport_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .org.sun.dim.fileformat.v3.TransactionListFMT lists = 2;
      private java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> lists_ =
        java.util.Collections.emptyList();
      private void ensureListsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          lists_ = new java.util.ArrayList<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT>(lists_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder> listsBuilder_;
      
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> getListsList() {
        if (listsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lists_);
        } else {
          return listsBuilder_.getMessageList();
        }
      }
      public int getListsCount() {
        if (listsBuilder_ == null) {
          return lists_.size();
        } else {
          return listsBuilder_.getCount();
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT getLists(int index) {
        if (listsBuilder_ == null) {
          return lists_.get(index);
        } else {
          return listsBuilder_.getMessage(index);
        }
      }
      public Builder setLists(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT value) {
        if (listsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListsIsMutable();
          lists_.set(index, value);
          onChanged();
        } else {
          listsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLists(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder builderForValue) {
        if (listsBuilder_ == null) {
          ensureListsIsMutable();
          lists_.set(index, builderForValue.build());
          onChanged();
        } else {
          listsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLists(org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT value) {
        if (listsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListsIsMutable();
          lists_.add(value);
          onChanged();
        } else {
          listsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLists(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT value) {
        if (listsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureListsIsMutable();
          lists_.add(index, value);
          onChanged();
        } else {
          listsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLists(
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder builderForValue) {
        if (listsBuilder_ == null) {
          ensureListsIsMutable();
          lists_.add(builderForValue.build());
          onChanged();
        } else {
          listsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLists(
          int index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder builderForValue) {
        if (listsBuilder_ == null) {
          ensureListsIsMutable();
          lists_.add(index, builderForValue.build());
          onChanged();
        } else {
          listsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLists(
          java.lang.Iterable<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT> values) {
        if (listsBuilder_ == null) {
          ensureListsIsMutable();
          super.addAll(values, lists_);
          onChanged();
        } else {
          listsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLists() {
        if (listsBuilder_ == null) {
          lists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          listsBuilder_.clear();
        }
        return this;
      }
      public Builder removeLists(int index) {
        if (listsBuilder_ == null) {
          ensureListsIsMutable();
          lists_.remove(index);
          onChanged();
        } else {
          listsBuilder_.remove(index);
        }
        return this;
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder getListsBuilder(
          int index) {
        return getListsFieldBuilder().getBuilder(index);
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder getListsOrBuilder(
          int index) {
        if (listsBuilder_ == null) {
          return lists_.get(index);  } else {
          return listsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder> 
           getListsOrBuilderList() {
        if (listsBuilder_ != null) {
          return listsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lists_);
        }
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder addListsBuilder() {
        return getListsFieldBuilder().addBuilder(
            org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.getDefaultInstance());
      }
      public org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder addListsBuilder(
          int index) {
        return getListsFieldBuilder().addBuilder(
            index, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.getDefaultInstance());
      }
      public java.util.List<org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder> 
           getListsBuilderList() {
        return getListsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder> 
          getListsFieldBuilder() {
        if (listsBuilder_ == null) {
          listsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder, org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMTOrBuilder>(
                  lists_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          lists_ = null;
        }
        return listsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.sun.dim.fileformat.v3.TransactionDBFMT)
    }
    
    static {
      defaultInstance = new TransactionDBFMT(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.sun.dim.fileformat.v3.TransactionDBFMT)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sun_dim_fileformat_v3_VertexFMT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_sun_dim_fileformat_v3_VertexFMT_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sun_dim_fileformat_v3_EdgeFMT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_sun_dim_fileformat_v3_EdgeFMT_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sun_dim_fileformat_v3_TransactionFMT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_sun_dim_fileformat_v3_TransactionFMT_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027ItemsetFileFormat.proto\022\031org.sun.dim.f" +
      "ileformat.v3\"\027\n\tVertexFMT\022\n\n\002id\030\001 \002(\005\"<\n" +
      "\007EdgeFMT\022\016\n\006source\030\002 \002(\005\022\016\n\006target\030\003 \002(\005" +
      "\022\021\n\tattribute\030\004 \002(\005\"D\n\016TransactionFMT\022\024\n" +
      "\014execution_id\030\001 \002(\005\022\r\n\005label\030\002 \002(\010\022\r\n\005it" +
      "ems\030\003 \003(\005\"U\n\022TransactionListFMT\022?\n\014trans" +
      "actions\030\001 \003(\0132).org.sun.dim.fileformat.v" +
      "3.TransactionFMT\"\267\002\n\020TransactionDBFMT\0221\n" +
      "\005edges\030\001 \003(\0132\".org.sun.dim.fileformat.v3" +
      ".EdgeFMT\0226\n\010vertices\030\005 \003(\0132$.org.sun.dim",
      ".fileformat.v3.VertexFMT\022F\n\023vertex_trans" +
      "actions\030\006 \003(\0132).org.sun.dim.fileformat.v" +
      "3.TransactionFMT\022\030\n\020positive_support\030\003 \002" +
      "(\005\022\030\n\020negative_support\030\004 \002(\005\022<\n\005lists\030\002 " +
      "\003(\0132-.org.sun.dim.fileformat.v3.Transact" +
      "ionListFMT"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_sun_dim_fileformat_v3_VertexFMT_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_sun_dim_fileformat_v3_VertexFMT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_sun_dim_fileformat_v3_VertexFMT_descriptor,
              new java.lang.String[] { "Id", },
              org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.class,
              org.sun.dim.fileformat.v3.ItemsetFileFormat.VertexFMT.Builder.class);
          internal_static_org_sun_dim_fileformat_v3_EdgeFMT_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_sun_dim_fileformat_v3_EdgeFMT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_sun_dim_fileformat_v3_EdgeFMT_descriptor,
              new java.lang.String[] { "Source", "Target", "Attribute", },
              org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.class,
              org.sun.dim.fileformat.v3.ItemsetFileFormat.EdgeFMT.Builder.class);
          internal_static_org_sun_dim_fileformat_v3_TransactionFMT_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_sun_dim_fileformat_v3_TransactionFMT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_sun_dim_fileformat_v3_TransactionFMT_descriptor,
              new java.lang.String[] { "ExecutionId", "Label", "Items", },
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.class,
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionFMT.Builder.class);
          internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_sun_dim_fileformat_v3_TransactionListFMT_descriptor,
              new java.lang.String[] { "Transactions", },
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.class,
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionListFMT.Builder.class);
          internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_sun_dim_fileformat_v3_TransactionDBFMT_descriptor,
              new java.lang.String[] { "Edges", "Vertices", "VertexTransactions", "PositiveSupport", "NegativeSupport", "Lists", },
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.class,
              org.sun.dim.fileformat.v3.ItemsetFileFormat.TransactionDBFMT.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
